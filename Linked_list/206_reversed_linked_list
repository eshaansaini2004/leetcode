# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        '''
        basically we just push elemetns to the front 
        first initialize the first node and its next as null, then create a new node as you
            go down the list and keep updating the next to the one before 
        '''
        if head is None or head.next is None:
            return head
        cur = ListNode(head.val)
        temp = head
        temp = temp.next
        while(temp):
            nex = cur
            cur = ListNode(temp.val)
            cur.next = nex
            temp = temp.next
        
        return cur
